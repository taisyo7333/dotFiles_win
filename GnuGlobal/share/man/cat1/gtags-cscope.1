


GTAGS-CSCOPE(1)                                   GTAGS-CSCOPE(1)


NNAAMMEE
       gtags-cscope - interactively examine a C program

SSYYNNOOPPSSIISS
       ggttaaggss--ccssccooppee [-bCdehLlVv][-F file ][-012345678 _p_a_t_t_e_r_n][-p
       n]

DDEESSCCRRIIPPTTIIOONN
       ggttaaggss--ccssccooppee is an interactive, screen-oriented tool  that
       allows the user to browse through C source files for spec-
       ified elements of code.

       ggttaaggss--ccssccooppee builds the symbol cross-reference  the  first
       time  it is used on the source files for the program being
       browsed. On a subsequent invocation, ggttaaggss--ccssccooppee rebuilds
       the  cross-reference  only if a source file has changed or
       the list of source files is different. When the cross-ref-
       erence  is  rebuilt,  it  is  updated incrementally, which
       makes rebuilding faster than the initial build.

OOPPTTIIOONNSS
       Some command line arguments can only  occur  as  the  only
       argument in the execution of ggttaaggss--ccssccooppee.  They cause the
       program to just print out some  output  and  exit  immedi-
       ately:

       --hh     View the long usage help display.

       --VV     Print  on the first line of screen the version num-
              ber of gtags-cscope.

       ----hheellpp Same as --hh

       ----vveerrssiioonn
              Same as --VV

       The following options can appear in any combination:

       --aa     Print absolute path name.

       --bb     Build the cross-reference only.

       --CC     Ignore letter case when searching.

       --dd     Do not update the cross-reference.

       --ee     Suppress the <Ctrl>-e command prompt between files.

       --FF _f_i_l_e
              Read  symbol  reference lines from _f_i_l_e.  (A symbol
              reference file is created by > and >>, and can also
              be  read  using  the  <  command,  described  under
              ``Issuing Subsequent Requests'', below.)




GNU Project                 March 2011                          1





GTAGS-CSCOPE(1)                                   GTAGS-CSCOPE(1)


       --ii     Ignore SIGINT signal in line-oriented mode.

       --LL     Do a single search with line-oriented  output  when
              used with the -num pattern option.

       --ll     Line-oriented interface (see ``Line-Oriented Inter-
              face'' below).  This option implies the -d  option.

       --[[00--99]] _p_a_t_t_e_r_n
              Go  to  input  field _n_u_m (counting from 0) and find
              _p_a_t_t_e_r_n.

       --pp _n   Display the last _n file path components instead  of
              the default (1). Use _0 not to display the file name
              at all.

       --vv     Be more verbose in line-oriented mode.

RReeqquueessttiinngg tthhee iinniittiiaall sseeaarrcchh
       After the cross-reference is ready, ggttaaggss--ccssccooppee will dis-
       play this menu:

       Find this C symbol:
       Find this function definition:
       Find functions called by this function (N/A):
       Find functions calling this function:
       Find this text string:
       Change this text string:
       Find this egrep pattern:
       Find this file:
       Find files #including this file:

       Press  the  <Up>  or <Down> keys repeatedly to move to the
       desired input field, type the text to search for, and then
       press the <Return> key.

IIssssuuiinngg ssuubbsseeqquueenntt rreeqquueessttss
       If the search is successful, any of these single-character
       commands can be used:

       0-9a-zA-Z
              Edit the file referenced by the given line  number.

       <Space>
              Display next set of matching lines.

       <Tab>  Alternate between the menu and the list of matching
              lines

       <Up>   Move to the previous menu item (if the cursor is in
              the menu) or move to the previous matching line (if
              the cursor is in the matching line list.)

       <Down> Move to the next menu item (if the cursor is in the



GNU Project                 March 2011                          2





GTAGS-CSCOPE(1)                                   GTAGS-CSCOPE(1)


              menu)  or  move  to  the next matching line (if the
              cursor is in the matching line list.)

       +      Display next set of matching lines.

       -      Display previous set of matching lines.

       ^e     Edit displayed files in order.

       >      Write the displayed list of lines to a file.

       >>     Append the displayed list of lines to a file.

       <      Read lines from a file that is in symbol  reference
              format  (created  by  >  or  >>),  just like the -F
              option.

       ^      Filter all lines through a shell command  and  dis-
              play  the resulting lines, replacing the lines that
              were already there.

       |      Pipe all lines to a shell command and display  them
              without changing them.

       ^g     Read  lines  from  the  result  of the execution of
              global(1).

       At any time these single-character commands  can  also  be
       used:

       <Return>
              Move to next input field.

       ^n     Move to next input field.

       ^p     Move to previous input field.

       ^y     Search with the last text typed.

       ^b     Move to previous input field and search pattern.

       ^f     Move to next input field and search pattern.

       ^c     Toggle ignore/use letter case when searching. (When
              ignoring letter  case,  search  for  ``FILE''  will
              match ``File'' and ``file''.)

       ^r     Rebuild the cross-reference.

       !      Start  an  interactive  shell (type ^d to return to
              gtags-cscope).

       ^l     Redraw the screen.




GNU Project                 March 2011                          3





GTAGS-CSCOPE(1)                                   GTAGS-CSCOPE(1)


       ?      Give help information about gtags-cscope  commands.

       ^d     Exit gtags-cscope.

       NOTE:  If  the  first character of the text to be searched
       for matches one of the above commands, escape it by typing
       a  (backslash) first.

       Substituting new text for old text

       After  the text to be changed has been typed, gtags-cscope
       will prompt for the new text, and then it will display the
       lines  containing  the  old  text.  Select the lines to be
       changed with these single-character commands:

       0-9a-zA-Z
              Mark or unmark the line to be changed.

       *      Mark or unmark all displayed lines to be changed.

       <Space>
              Display next set of lines.

       +      Display next set of lines.

       -      Display previous set of lines.

       ^a     Mark or unmark all lines to be changed.

       ^d     Change the marked lines and exit.

       <Esc>  Exit without changing the marked lines.

       !      Start an interactive shell (type ^d  to  return  to
              gtags-cscope).

       ^l     Redraw the screen.

       ?      Give  help information about gtags-cscope commands.

        Special keys
              If your terminal has arrow keys that  work  in  vi,
              you  can  use them to move around the input fields.
              The up-arrow key is useful to move to the  previous
              input  field instead of using the <Tab> key repeat-
              edly. If you have <CLEAR>, <NEXT>, or  <PREV>  keys
              they will act as the ^l, +, and - commands, respec-
              tively.

LLiinnee--OOrriieenntteedd iinntteerrffaaccee
       The -l option lets you use gtags-cscope  where  a  screen-
       oriented  interface would not be useful, for example, from
       another screen-oriented program.




GNU Project                 March 2011                          4





GTAGS-CSCOPE(1)                                   GTAGS-CSCOPE(1)


       gtags-cscope will prompt with >> when it is ready  for  an
       input  line  starting with the field number (counting from
       0) immediately followed by the search pattern,  for  exam-
       ple,  ``lmain'' finds the definition of the main function.

       If you just want a single search, instead of the -l option
       use the -L and -num pattern options, and you won't get the
       >> prompt.

       For -l, gtags-cscope outputs the number of reference lines
       cscope: 2 lines

       For each reference found, gtags-cscope outputs a line con-
       sisting of the file name, function name, line number,  and
       line  text,  separated by spaces, for example, main.c main
       161 main(argc, argv)

       Note that the editor is not called  to  display  a  single
       reference, unlike the screen-oriented interface.

       You can use the c command to toggle ignore/use letter case
       when searching. (When ignoring  letter  case,  search  for
       ``FILE'' will match ``File'' and ``file''.)

       You can use the r command to rebuild the database.

       gtags-cscope  will  quit  when  it detects end-of-file, or
       when the first character of an input  line  is  ``^d''  or
       ``q''.

EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS
       The following environment variables are the cscope origin.


       CCSSCCOOPPEE__EEDDIITTOORR
              Overrides the EDITOR and VIEWER variables. Use this
              if  you  wish to use a different editor with cscope
              than that specified  by  your  EDITOR/VIEWER  vari-
              ables.

       CCSSCCOOPPEE__LLIINNEEFFLLAAGG
              Format  of the line number flag for your editor. By
              default, cscope invokes your editor via the equiva-
              lent of ``editor +N file'', where ``N'' is the line
              number that the editor should jump to. This  format
              is  used by both emacs and vi. If your editor needs
              something different, specify it in  this  variable,
              with  ``%s''  as a placeholder for the line number.
              Ex: if your editor needs to be invoked as  ``editor
              -#103  file''  to go to line 103, set this variable
              to ``-#%s''.

       CCSSCCOOPPEE__LLIINNEEFFLLAAGG__AAFFTTEERR__FFIILLEE
              Set this variable to ``yes'' if your  editor  needs



GNU Project                 March 2011                          5





GTAGS-CSCOPE(1)                                   GTAGS-CSCOPE(1)


              to be invoked with the line number option after the
              filename to be edited. To continue the example from
              CSCOPE_LINEFLAG, above: if your editor needs to see
              ``editor  file  -#number'',  set  this  environment
              variable.  Users  of  most  standard  editors  (vi,
              emacs) do not need to set this variable.

       EEDDIITTOORR Preferred editor, which defaults to vi.

       HHOOMMEE   Home  directory,  which  is  automatically  set  at
              login.

       SSHHEELLLL  Preferred shell, which defaults to sh.

       TTEERRMM   Terminal type, which must be a screen terminal.

       TTEERRMMIINNFFOO
              Terminal  information  directory full path name. If
              your terminal  is  not  in  the  standard  terminfo
              directory,  see curses and terminfo for how to make
              your own terminal description.

       TTMMPPDDIIRR Temporary file directory, which defaults to /tmp.

       VVIIEEWWEERR Preferred file  display  program  (such  as  less),
              which overrides EDITOR (see above).

       The following environment variables are the GLOBAL origin.


       GGTTAAGGSSRROOOOTT
              The root directory of the project.

       GGTTAAGGSSDDBBPPAATTHH
              The directory on which tag files exist.  This value
              is ignored when GGTTAAGGSSRROOOOTT is not defined.

       GGTTAAGGSSLLIIBBPPAATTHH
              If  this variable is set, it is used as the path to
              search for  library  functions.  If  the  specified
              object  is  not  found  in the project, gglloobbaall also
              search in these paths.  Since only 'GTAGS' is  tar-
              geted  in  the  retrieval, this variable is ignored
              when the --rr or --ss is specified.

       GGTTAAGGSSCCOONNFF
              Configuration file. The  default  is  '$HOME/.glob-
              alrc'.

       GGTTAAGGSSLLAABBEELL
              Configuration label. The default is _d_e_f_a_u_l_t.

       MMAAKKEEOOBBJJDDIIRRPPRREEFFIIXX
              If  this  variable  is  set, '$MAKEOBJDIRPREFIX' is



GNU Project                 March 2011                          6





GTAGS-CSCOPE(1)                                   GTAGS-CSCOPE(1)


              used as the prefix of BSD-style objdir. The default
              is '/usr/obj'.

FFIILLEESS
       'GTAGS'
              Tag file for object definitions.

       'GRTAGS'
              Tag file for object references.

       'GPATH'
              Tag file for path of source files.

       'GTAGSROOT'
              If  environment  variable  GGTTAAGGSSRROOOOTT is not set and
              file 'GTAGSROOT' exists in the same directory  with
              'GTAGS'  then gglloobbaall sets GGTTAAGGSSRROOOOTT to the contents
              of the file.

       '$HOME/.globalrc', '/etc/gtags.conf',
       '[sysconfdir]/gtags.conf'
              Configuration files.

SSEEEE AALLSSOO
       ggttaaggss(1), gglloobbaall(1), hhttaaggss(1).

       GNU GLOBAL source code tag system
       (http://www.gnu.org/software/global/).

BBUUGG
       The  function  field  of  the  display is almost <unknown>
       since GLOBAL doesn't recognize it.

       ``Find functions called by this function'' is  not  imple-
       mented.

AAUUTTHHOORR
       Joe Steffen (original author) and others

HHIISSTTOORRYY
       CCssccooppee  was originally developed at Bell Labs in the early
       1980's, and was released as free software  under  the  BSD
       license  in  April  2000.  GGttaaggss--ccssccooppee is a derivative of
       cscope to use GLOBAL as the back-end.   Its  line-oriented
       interface  was  originally  written  in  2006, and was re-
       implemented in 2011 using cscope itself.











GNU Project                 March 2011                          7


